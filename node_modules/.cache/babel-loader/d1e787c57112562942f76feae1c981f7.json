{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productCreateReviewReducer, productDetailsReducer, productListReducer } from \"./Reducers/ProductReducers\";\nimport { cartReducer } from \"./Reducers/CartReducers\";\nimport { userDetailsReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer } from \"./Reducers/userReducers\";\nimport { orderCreateReducer, orderDetailsReducer, orderListMyReducer, orderPayReducer } from \"./Reducers/OrderReducers\";\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productReviewCreate: productCreateReviewReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer\n});\nconst cartItemsFromLocalStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : []; // login\n\nconst userInfoFromLocalStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null; // shippingAddress\n\nconst shippingAddressFromLocalStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromLocalStorage,\n    shippingAddress: shippingAddressFromLocalStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromLocalStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["F:/Project/Shop/online-shop(v0.1)/frontend/src/Redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productCreateReviewReducer","productDetailsReducer","productListReducer","cartReducer","userDetailsReducer","userLoginReducer","userRegisterReducer","userUpdateProfileReducer","orderCreateReducer","orderDetailsReducer","orderListMyReducer","orderPayReducer","reducer","productList","productDetails","productReviewCreate","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","orderPay","orderListMy","cartItemsFromLocalStorage","localStorage","getItem","JSON","parse","userInfoFromLocalStorage","shippingAddressFromLocalStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,EAAqCC,qBAArC,EAA4DC,kBAA5D,QAAsF,4BAAtF;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,EAA+CC,mBAA/C,EAAoEC,wBAApE,QAAoG,yBAApG;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,EAAkDC,kBAAlD,EAAsEC,eAAtE,QAA6F,0BAA7F;AAEA,MAAMC,OAAO,GAAGhB,eAAe,CAAC;AAC5BiB,EAAAA,WAAW,EAAEX,kBADe;AAE5BY,EAAAA,cAAc,EAAEb,qBAFY;AAG5Bc,EAAAA,mBAAmB,EAAEf,0BAHO;AAI5BgB,EAAAA,IAAI,EAAEb,WAJsB;AAK5Bc,EAAAA,SAAS,EAAEZ,gBALiB;AAM5Ba,EAAAA,YAAY,EAAEZ,mBANc;AAO5Ba,EAAAA,WAAW,EAAEf,kBAPe;AAQ5BgB,EAAAA,iBAAiB,EAAEb,wBARS;AAS5Bc,EAAAA,WAAW,EAAEb,kBATe;AAU5Bc,EAAAA,YAAY,EAAEb,mBAVc;AAW5Bc,EAAAA,QAAQ,EAAEZ,eAXkB;AAY5Ba,EAAAA,WAAW,EAAEd;AAZe,CAAD,CAA/B;AAiBA,MAAMe,yBAAyB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAChCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADgC,GAEhC,EAFF,C,CAIA;;AACA,MAAMG,wBAAwB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD+B,GAE/B,IAFF,C,CAIA;;AACA,MAAMI,+BAA+B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACtCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADsC,GAEtC,EAFF;AAIA,MAAMK,YAAY,GAAG;AAEjBhB,EAAAA,IAAI,EAAE;AACFiB,IAAAA,SAAS,EAAER,yBADT;AAEFS,IAAAA,eAAe,EAAEH;AAFf,GAFW;AAMjBd,EAAAA,SAAS,EAAE;AACPkB,IAAAA,QAAQ,EAAEL;AADH;AANM,CAArB;AAaA,MAAMM,UAAU,GAAG,CAACtC,KAAD,CAAnB;AAEA,MAAMuC,KAAK,GAAG1C,WAAW,CACrBiB,OADqB,EAErBoB,YAFqB,EAGrBjC,mBAAmB,CAACF,eAAe,CAAC,GAAGuC,UAAJ,CAAhB,CAHE,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { productCreateReviewReducer, productDetailsReducer, productListReducer } from \"./Reducers/ProductReducers\";\r\nimport { cartReducer } from \"./Reducers/CartReducers\";\r\nimport { userDetailsReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer } from \"./Reducers/userReducers\";\r\nimport { orderCreateReducer, orderDetailsReducer, orderListMyReducer, orderPayReducer } from \"./Reducers/OrderReducers\";\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productReviewCreate: productCreateReviewReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer\r\n\r\n    \r\n});\r\n\r\nconst cartItemsFromLocalStorage = localStorage.getItem(\"cartItems\")\r\n? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n: [];\r\n\r\n// login\r\nconst userInfoFromLocalStorage = localStorage.getItem(\"userInfo\")\r\n? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n: null;\r\n\r\n// shippingAddress\r\nconst shippingAddressFromLocalStorage = localStorage.getItem(\"shippingAddress\")\r\n? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n: {};\r\n\r\nconst initialState = {\r\n   \r\n    cart: {\r\n        cartItems: cartItemsFromLocalStorage,\r\n        shippingAddress: shippingAddressFromLocalStorage,\r\n    },\r\n    userLogin: {\r\n        userInfo: userInfoFromLocalStorage,\r\n    },\r\n\r\n    \r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}