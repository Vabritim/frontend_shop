{"ast":null,"code":"import axios from \"axios\";\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS } from \"../Constants/UserConstants\"; //LOGIN\n\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/users/login`, {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; //LOGOUT\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  document.location.href = \"/login\";\n}; //REGISTER\n\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/users`, {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; //USER DETAILS\n\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n}; //UPDATE PROFILE\n\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Nitro/Desktop/shop/frontend/src/Redux/Actions/userActions.js"],"names":["axios","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_RESET","USER_DETAILS_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","document","location","href","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS } from \"../Constants/UserConstants\";\r\n\r\n//LOGIN\r\nexport const login = (email,password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        });\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n        const {data} = await axios.post(`/api/users/login`,{email,password}, config);\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        });\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n//LOGOUT\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    });\r\n    dispatch({\r\n        type: USER_DETAILS_RESET\r\n    });\r\n    document.location.href = \"/login\";\r\n};\r\n\r\n//REGISTER\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        });\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n        const {data} = await axios.post(`/api/users`,{name, email, password}, config);\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        });\r\n        \r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n//USER DETAILS\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        });\r\n        const {\r\n            userLogin: { userInfo },} = getState()\r\n       \r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        };\r\n        const {data} = await axios.get(`/api/users/${id}`, config);\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message \r\n        ? error.response.data.message \r\n        : error.message;\r\n\r\n        if (message === \"Not authorized, token failed\") {\r\n            dispatch(logout());\r\n        }\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n\r\n//UPDATE PROFILE\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        });\r\n        const {\r\n            userLogin: { userInfo },} = getState()\r\n       \r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        };\r\n        const {data} = await axios.put(`/api/users/profile`,user, config);\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        });\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message \r\n        ? error.response.data.message \r\n        : error.message;\r\n\r\n        if (message === \"Not authorized, token failed\") {\r\n            dispatch(logout());\r\n        }\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}