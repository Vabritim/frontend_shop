{"ast":null,"code":"import { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS } from \"../Constants/ProductConstants\";\nimport axios from \"axios\"; //GET PRODUCT LIST\n\nexport const listProduct = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n\n  ;\n}; //GET PRODUCT DATAILS\n\nexport const listProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n\n  ;\n}; // PRODUCT REVIEW CREATE\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.put(`/api/products/${productId}/review`, config);\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Nitro/Desktop/shop/frontend/src/Redux/Actions/ProductActions.js"],"names":["PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","axios","listProduct","dispatch","type","data","get","payload","error","response","message","listProductDetails","id","createProductReview","productId","review","getState","userLogin","userInfo","config","headers","Authorization","token","put","logout","ORDER_PAY_FAIL"],"mappings":"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","sourcesContent":["import { \r\n    PRODUCT_LIST_FAIL, \r\n    PRODUCT_LIST_REQUEST, \r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS\r\n} from \"../Constants/ProductConstants\";\r\nimport axios from \"axios\"\r\n\r\n\r\n//GET PRODUCT LIST\r\nexport const listProduct = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_LIST_REQUEST\r\n        });\r\n        const {data} = await axios.get(\"/api/products\");\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message,\r\n        });\r\n    };\r\n};\r\n\r\n//GET PRODUCT DATAILS\r\nexport const listProductDetails = (id) => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_REQUEST\r\n        });\r\n        const {data} = await axios.get(`/api/products/${id}`);\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message,\r\n        });\r\n    };\r\n};\r\n\r\n// PRODUCT REVIEW CREATE\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        });\r\n        const {\r\n            userLogin: { userInfo },} = getState()\r\n       \r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        };\r\n        await axios.put(`/api/products/${productId}/review`, config);\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message \r\n        ? error.response.data.message \r\n        : error.message;\r\n\r\n        if (message === \"Not authorized, token failed\") {\r\n            dispatch(logout());\r\n        }\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}