{"ast":null,"code":"import axios from \"axios\";\nimport { CART_CLEAR_ITEMS } from \"../Constants/CartConstants\";\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS } from \"../Constants/OrderConstants.js\";\nimport { logout } from \"./userActions\"; //ORDER CREATE\n\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data\n    });\n    localStorage.removeItem(\"cartItems\");\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message\n    });\n  }\n}; //GET ORDER BY ID\n\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n}; //ORDER PAY\n\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message\n    });\n  }\n}; //USER ORDERS\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Nitro/Desktop/shop/frontend/src/Redux/Actions/OrderActions.js"],"names":["axios","CART_CLEAR_ITEMS","ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","logout","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","localStorage","removeItem","error","message","response","getOrderDetails","id","get","payOrder","orderId","paymentResult","put","listMyOrders"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { CART_CLEAR_ITEMS } from \"../Constants/CartConstants\";\r\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS } from \"../Constants/OrderConstants.js\";\r\nimport { logout } from \"./userActions\";\r\n\r\n//ORDER CREATE\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        });\r\n        const {\r\n            userLogin: { userInfo },} = getState()\r\n       \r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        };\r\n        const {data} = await axios.post(`/api/orders`,order, config);\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        });\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        });\r\n\r\n        localStorage.removeItem(\"cartItems\");\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message \r\n        ? error.response.data.message \r\n        : error.message;\r\n\r\n        if (message === \"Not authorized, token failed\") {\r\n            dispatch(logout());\r\n        }\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n\r\n//GET ORDER BY ID\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        });\r\n        const {\r\n            userLogin: { userInfo },} = getState()\r\n       \r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        };\r\n        const {data} = await axios.get(`/api/orders/${id}`, config);\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message \r\n        ? error.response.data.message \r\n        : error.message;\r\n\r\n        if (message === \"Not authorized, token failed\") {\r\n            dispatch(logout());\r\n        }\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n\r\n//ORDER PAY\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        });\r\n        const {\r\n            userLogin: { userInfo },} = getState()\r\n       \r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        };\r\n        const {data} = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message \r\n        ? error.response.data.message \r\n        : error.message;\r\n\r\n        if (message === \"Not authorized, token failed\") {\r\n            dispatch(logout());\r\n        }\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n\r\n//USER ORDERS\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        });\r\n        const {\r\n            userLogin: { userInfo },} = getState()\r\n       \r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        };\r\n        const {data} = await axios.get(`/api/orders/`, config);\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message \r\n        ? error.response.data.message \r\n        : error.message;\r\n\r\n        if (message === \"Not authorized, token failed\") {\r\n            dispatch(logout());\r\n        }\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}