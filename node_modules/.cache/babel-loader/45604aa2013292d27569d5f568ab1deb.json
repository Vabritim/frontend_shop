{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nitro\\\\Desktop\\\\shop\\\\frontend\\\\src\\\\components\\\\profileComponents\\\\ProfileTabs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Toast from \"../LoadingError/Toast\";\nimport Message from \"../components/LoadingError/Error\";\nimport Loading from \"../components/LoadingError/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProfileTabs = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  useEffect(() => {\n    if (user) {\n      setName(user.name);\n      setEmail(user.email); //setPassword(user.password);\n      //setConfirmPassword(user.confirmPassword);\n    }\n  }, [dispatch, user]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords do not match\");\n    } else {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toast, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), error && /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"row  form-container\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"account-fn\",\n            children: \"UserName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            required: true,\n            value: user.name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"account-email\",\n            children: \"E-mail Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"email\",\n            required: true,\n            value: user.email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"account-pass\",\n            children: \"New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"password\",\n            value: user.password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"account-confirm-pass\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"password\",\n            value: user.confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProfileTabs, \"eTUXzAa2v1RWxM9JFvavbTng1h8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ProfileTabs;\nexport default ProfileTabs;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileTabs\");","map":{"version":3,"sources":["C:/Users/Nitro/Desktop/shop/frontend/src/components/profileComponents/ProfileTabs.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Toast","Message","Loading","ProfileTabs","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","dispatch","userDetails","state","loading","error","user","submitHandler","e","preventDefault","alert","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Toast from \"../LoadingError/Toast\";\r\nimport Message from \"../components/LoadingError/Error\";\r\nimport Loading from \"../components/LoadingError/Loading\";\r\n\r\nconst ProfileTabs = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const dispatch =useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n      //setPassword(user.password);\r\n      //setConfirmPassword(user.confirmPassword);\r\n    }\r\n  \r\n  }, [dispatch,user])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      alert(\"Passwords do not match\")\r\n    } else {\r\n\r\n    }\r\n    \r\n  }\r\n   \r\n\r\n  return (\r\n    <>\r\n    <Toast/>\r\n    {error && <Message></Message>}  \r\n      <form className=\"row  form-container\" onSubmit={submitHandler}>\r\n        <div className=\"col-md-6\">\r\n          <div className=\"form\">\r\n            <label for=\"account-fn\">UserName</label>\r\n            <input className=\"form-control\" type=\"text\" required value={user.name} onChange={(e) => setName(e.target.value)}/>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-6\">\r\n          <div className=\"form\">\r\n            <label for=\"account-email\">E-mail Address</label>\r\n            <input className=\"form-control\" type=\"email\" required value={user.email} onChange={(e) => setEmail(e.target.value)}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <div className=\"form\">\r\n            <label for=\"account-pass\">New Password</label>\r\n            <input className=\"form-control\" type=\"password\" value={user.password} onChange={(e) => setPassword(e.target.value)}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <div className=\"form\">\r\n            <label for=\"account-confirm-pass\">Confirm Password</label>\r\n            <input className=\"form-control\" type=\"password\" value={user.confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\">Update Profile</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileTabs;\r\n"]},"metadata":{},"sourceType":"module"}